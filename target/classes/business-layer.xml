<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<context:component-scan base-package="com.muzi.biz"></context:component-scan>
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>


	<bean id="boardDAO" class="com.muzi.biz.board.BoardDAOSpring"></bean>


	<!-- JDBC 템플릿 등록 -->
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- DataSource 등록 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" 	value="${board.jdbc.driver}"></property>
		<property name="url" 				value="${board.jdbc.url}"></property>
		<property name="username" 			value="${board.jdbc.username}"></property>
		<property name="password" 			value="${board.jdbc.password}"></property>
	
	</bean>
	
	
	
	<!-- 외부 Properties 를 이용한 Datasource설정 -->
	<context:property-placeholder location="classpath:datasource.properties"/>
	

	<!-- 횡단관점에 해당하는 Advice 클래스 등록 
	<bean id="log" class="com.multicampus.biz.common.LogAdvice"></bean>
	<bean id="afterReturning" class="com.multicampus.biz.common.AfterReturningAdvice"></bean>
	<bean id="afterThrowing" class="com.multicampus.biz.common.AfterThrowingAdvice"></bean>
	<bean id="around" class="com.multicampus.biz.common.AroundAdvice"></bean>
	-->
	<!-- AOP 설정
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.multicampus.biz..*Impl.*(..))"/>
		<aop:pointcut id="getPointcut" expression="execution(* com.multicampus.biz..*Impl.get*(..))"/>
		
		<aop:aspect ref="log">
			<aop:before pointcut-ref="allPointcut" method="printLog"/>
		</aop:aspect>
		
		<aop:aspect ref="afterReturning">
			<aop:after-returning pointcut-ref="getPointcut" method="afterLog" returning="returnObj"/>
		</aop:aspect>
		
		<aop:aspect ref="afterThrowing">
			<aop:after-throwing pointcut-ref="allPointcut" method="excepionLog" throwing="exceptObj"/>
		</aop:aspect>
		
		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointcut" method="aroundLog"/>
		</aop:aspect>
	</aop:config>
	 -->
</beans>





